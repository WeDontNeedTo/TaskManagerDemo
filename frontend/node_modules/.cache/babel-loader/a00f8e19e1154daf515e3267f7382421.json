{"ast":null,"code":"var _jsxFileName = \"E:\\\\coding\\\\WEB\\\\garpix\\\\React-Django-TaskManager\\\\taskmanager\\\\TaskManagerDemo\\\\src\\\\components\\\\AddTaskForm\\\\AddTaskForm.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport TaskManagerService from \"../../services/TaskManagerService\";\n\nconst AddTaskForm = ({\n  addTask\n}) => {\n  const [show, setShow] = useState(false);\n  const [value, setValue] = useState(\"\");\n  const [user, setUser] = useState(\"all\");\n  const [usersdata, setUserdata] = useState([]);\n  const API = new TaskManagerService();\n  useEffect(() => {\n    async function get() {\n      await API.getUsers().then(res => {//\n      });\n    }\n\n    console.log(get());\n  });\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = () => setShow(true);\n\n  const handlerSubmit = event => {\n    event.preventDefault();\n    console.log(value, user);\n\n    if (user === \"all\" || value.length < 1) {\n      return;\n    }\n\n    if (value.trim()) {\n      addTask({\n        id: Date.now(),\n        title: value,\n        contractor_id: +user,\n        status: 1\n      });\n      setValue(\"\");\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary\",\n    onClick: handleShow,\n    style: {\n      margin: \"4px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, \"\\u041D\\u043E\\u0432\\u0430\\u044F \\u0437\\u0430\\u0434\\u0430\\u0447\\u0430\"), /*#__PURE__*/React.createElement(Modal, {\n    show: show,\n    onHide: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, \"\\u041D\\u043E\\u0432\\u0430\\u044F \\u0437\\u0430\\u0434\\u0430\\u0447\\u0430\")), /*#__PURE__*/React.createElement(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, \"\\u041F\\u043E\\u0436\\u0430\\u043B\\u0443\\u0439\\u0441\\u0442\\u0430, \\u0432\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u0437\\u0430\\u0434\\u0430\\u0447\\u0438\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handlerSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-control\",\n    value: value,\n    onChange: event => setValue(event.target.value),\n    placeholder: \"....\",\n    style: {\n      width: \"80%\",\n      margin: \"6px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, \"\\u041F\\u043E\\u0436\\u0430\\u043B\\u0443\\u0439\\u0441\\u0442\\u0430, \\u0432\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0438\\u0441\\u043F\\u043E\\u043B\\u043D\\u0438\\u0442\\u0435\\u043B\\u044F\"), /*#__PURE__*/React.createElement(\"select\", {\n    className: \"form-control\",\n    style: {\n      width: \"80%\",\n      margin: \"6px\"\n    },\n    onChange: event => setUser(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"all\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, \"\\u0412\\u0441\\u0435 \\u0438\\u0441\\u043F\\u043E\\u043B\\u043D\\u0438\\u0442\\u0435\\u043B\\u0438\"), usersdata.map(i => {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      key: i.id,\n      value: i.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }\n    }, i.last_name, \" \", i.first_name);\n  })), /*#__PURE__*/React.createElement(Modal.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"outline-danger\",\n    onClick: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, \"\\u0417\\u0430\\u043A\\u0440\\u044B\\u0442\\u044C\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"outline-success\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\")))));\n};\n\nexport default AddTaskForm;","map":{"version":3,"sources":["E:/coding/WEB/garpix/React-Django-TaskManager/taskmanager/TaskManagerDemo/src/components/AddTaskForm/AddTaskForm.js"],"names":["React","useState","useEffect","Modal","Button","TaskManagerService","AddTaskForm","addTask","show","setShow","value","setValue","user","setUser","usersdata","setUserdata","API","get","getUsers","then","res","console","log","handleClose","handleShow","handlerSubmit","event","preventDefault","length","trim","id","Date","now","title","contractor_id","status","margin","target","width","map","i","last_name","first_name"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\nimport TaskManagerService from \"../../services/TaskManagerService\";\r\n\r\nconst AddTaskForm = ({ addTask }) => {\r\n  const [show, setShow] = useState(false);\r\n  const [value, setValue] = useState(\"\");\r\n  const [user, setUser] = useState(\"all\");\r\n  const [usersdata, setUserdata] = useState([]);\r\n\r\n  const API = new TaskManagerService();\r\n\r\n  useEffect(() => {\r\n    async function get(){\r\n      await API.getUsers().then((res) => {\r\n        //\r\n      });\r\n    }\r\n    console.log(get());\r\n  });\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  const handlerSubmit = (event) => {\r\n    event.preventDefault();\r\n    console.log(value, user);\r\n    if (user === \"all\" || value.length < 1) {\r\n      return;\r\n    }\r\n    if (value.trim()) {\r\n      addTask({\r\n        id: Date.now(),\r\n        title: value,\r\n        contractor_id: +user,\r\n        status: 1,\r\n      });\r\n      setValue(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <button\r\n        className=\"btn btn-primary\"\r\n        onClick={handleShow}\r\n        style={{ margin: \"4px\" }}\r\n      >\r\n        Новая задача\r\n      </button>\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Новая задача</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>Пожалуйста, введите название задачи</Modal.Body>\r\n        <form onSubmit={handlerSubmit}>\r\n          <input\r\n            className=\"form-control\"\r\n            value={value}\r\n            onChange={(event) => setValue(event.target.value)}\r\n            placeholder=\"....\"\r\n            style={{ width: \"80%\", margin: \"6px\" }}\r\n          />\r\n          <Modal.Body>Пожалуйста, выберите исполнителя</Modal.Body>\r\n          <select\r\n            className=\"form-control\"\r\n            style={{ width: \"80%\", margin: \"6px\" }}\r\n            onChange={(event) => setUser(event.target.value)}\r\n          >\r\n            <option value={\"all\"}>Все исполнители</option>\r\n            {usersdata.map((i) => {\r\n              return (\r\n                <option key={i.id} value={i.id}>\r\n                  {i.last_name} {i.first_name}\r\n                </option>\r\n              );\r\n            })}\r\n          </select>\r\n          <Modal.Footer>\r\n            <Button variant=\"outline-danger\" onClick={handleClose}>\r\n              Закрыть\r\n            </Button>\r\n            <Button variant=\"outline-success\" type=\"submit\">\r\n              Сохранить\r\n            </Button>\r\n          </Modal.Footer>\r\n        </form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddTaskForm;\r\n"]},"metadata":{},"sourceType":"module"}