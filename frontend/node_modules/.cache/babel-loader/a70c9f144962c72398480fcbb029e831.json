{"ast":null,"code":"var _jsxFileName = \"E:\\\\coding\\\\WEB\\\\garpix\\\\React-Django-TaskManager\\\\taskmanager\\\\TaskManagerDemo\\\\src\\\\App.js\";\nimport React from \"react\";\nimport \"./index.css\";\nimport Header from \"./components/Header/Header\";\nimport Buttons from \"./components/Buttons/Buttons\";\nimport Status from \"./components/Status/Status\";\nimport Users from \"./components/Users/Users\";\nimport AddTaskForm from \"./components/AddTaskForm/AddTaskForm\";\nimport tasks from \"./utils/tasks.json\";\nimport usersdata from \"./utils/users.json\";\nimport statusesdata from \"./utils/statuses.json\";\nimport _ from \"lodash\";\nimport UsersService from './services/UsersService';\nconst userapi = new UsersService();\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.search = (term, arr) => {\n      if (term === \"\" || term == null) {\n        return arr;\n      }\n\n      return arr.filter(i => i.title.toLowerCase().includes(term.toLowerCase()));\n    };\n\n    this.setTermSeacrh = term => {\n      this.setState({\n        term: term\n      });\n    };\n\n    this.filter = (flagUser, flagStatus, valueUser, valueStatus, arr) => {\n      if (flagStatus !== \"\" || flagUser !== \"\") {\n        if (flagUser === \"user\") {\n          arr = arr.filter(i => i.contractor_id === +valueUser);\n        }\n\n        if (flagStatus === \"status\") {\n          arr = arr.filter(i => i.status === +valueStatus);\n        }\n      } else {\n        return arr;\n      }\n\n      return arr;\n    };\n\n    this.setContractorFilter = (flagContractor, value) => {\n      if (value === \"all\") {\n        this.setState(() => {\n          return {\n            contractorFilter: \"\",\n            valueUser: value\n          };\n        });\n      } else {\n        this.setState(() => {\n          return {\n            contractorFilter: flagContractor,\n            valueUser: value\n          };\n        });\n      }\n    };\n\n    this.setStatusFilter = (flagStatus, value) => {\n      if (value === \"all\") {\n        this.setState(() => {\n          return {\n            statusFilter: \"\",\n            valueStatus: value\n          };\n        });\n      } else {\n        this.setState(() => {\n          return {\n            statusFilter: flagStatus,\n            valueStatus: value\n          };\n        });\n      }\n    };\n\n    this.addTask = newItem => {\n      let newTasks = _.cloneDeep(this.state.tasks);\n\n      newTasks.push(newItem);\n      this.setState(() => {\n        return {\n          tasks: newTasks\n        };\n      }, () => {\n        localStorage.setItem(\"tasks\", JSON.stringify(newTasks));\n      });\n    };\n\n    this.state = {\n      tasks: tasks.tasks,\n      users: usersdata,\n      statuses: statusesdata,\n      term: \"\",\n      contractorFilter: \"\",\n      statusFilter: \"\",\n      valueUser: \"\",\n      valueStatus: \"\",\n      usersApi: []\n    };\n  }\n\n  doClick(arr) {\n    this.setState({\n      tasks: arr\n    }, () => {\n      localStorage.setItem(\"tasks\", JSON.stringify(arr));\n    });\n  }\n\n  clear() {\n    localStorage.clear();\n  }\n\n  componentDidMount() {\n    if (localStorage.tasks) {\n      this.setState({\n        tasks: JSON.parse(localStorage.getItem(\"tasks\"))\n      });\n    }\n\n    userapi.getUser().then(res => {\n      console.log(res.data);\n      this.setState(() => {\n        return {\n          usersApi: res.data\n        };\n      });\n    });\n    console.log(this.state.usersApi);\n  }\n\n  render() {\n    const {\n      term,\n      contractorFilter,\n      statusFilter,\n      valueUser,\n      valueStatus,\n      tasks\n    } = this.state;\n    const visibleTasks = this.filter(contractorFilter, statusFilter, valueUser, valueStatus, this.search(term, tasks));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-fluid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      border: \"1\",\n      className: \"main-table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"caption\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(AddTaskForm, {\n      addTask: this.addTask,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-warning btn-sm\",\n      onClick: this.clear.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 13\n      }\n    }, \"\\u0421\\u0431\\u0440\\u043E\\u0441\\u0438\\u0442\\u044C localStorage\")), /*#__PURE__*/React.createElement(Header, {\n      setTermSeacrh: this.setTermSeacrh,\n      setContractorFilter: this.setContractorFilter,\n      setStatusFilter: this.setStatusFilter,\n      tasks: tasks,\n      users: this.state.users.users,\n      statuses: this.state.statuses.statuses,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }\n    }, visibleTasks.map((item, index) => {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: item.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 19\n        }\n      }, index + 1, \" \"), /*#__PURE__*/React.createElement(\"td\", {\n        id: \"title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 19\n        }\n      }, item.title), /*#__PURE__*/React.createElement(Users, {\n        users: this.state.users,\n        item: item.contractor_id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(Status, {\n        status: this.state.statuses,\n        item: item.status,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(Buttons, {\n        tasks: tasks,\n        item: item,\n        doClick: this.doClick.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 19\n        }\n      }));\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["E:/coding/WEB/garpix/React-Django-TaskManager/taskmanager/TaskManagerDemo/src/App.js"],"names":["React","Header","Buttons","Status","Users","AddTaskForm","tasks","usersdata","statusesdata","_","UsersService","userapi","App","Component","constructor","props","search","term","arr","filter","i","title","toLowerCase","includes","setTermSeacrh","setState","flagUser","flagStatus","valueUser","valueStatus","contractor_id","status","setContractorFilter","flagContractor","value","contractorFilter","setStatusFilter","statusFilter","addTask","newItem","newTasks","cloneDeep","state","push","localStorage","setItem","JSON","stringify","users","statuses","usersApi","doClick","clear","componentDidMount","parse","getItem","getUser","then","res","console","log","data","render","visibleTasks","bind","map","item","index","id"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport \"./index.css\";\r\nimport Header from \"./components/Header/Header\";\r\nimport Buttons from \"./components/Buttons/Buttons\";\r\nimport Status from \"./components/Status/Status\";\r\nimport Users from \"./components/Users/Users\";\r\nimport AddTaskForm from \"./components/AddTaskForm/AddTaskForm\";\r\nimport tasks from \"./utils/tasks.json\";\r\nimport usersdata from \"./utils/users.json\";\r\nimport statusesdata from \"./utils/statuses.json\";\r\nimport _ from \"lodash\";\r\nimport UsersService from './services/UsersService';\r\n\r\nconst userapi = new UsersService();\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      tasks: tasks.tasks,\r\n      users: usersdata,\r\n      statuses: statusesdata,\r\n      term: \"\",\r\n      contractorFilter: \"\",\r\n      statusFilter: \"\",\r\n      valueUser: \"\",\r\n      valueStatus: \"\",\r\n      usersApi:[]\r\n    };\r\n  }\r\n\r\n  doClick(arr) {\r\n    this.setState({ tasks: arr }, () => {\r\n      localStorage.setItem(\"tasks\", JSON.stringify(arr));\r\n    });\r\n  }\r\n\r\n  search = (term, arr) => {\r\n    if (term === \"\" || term == null) {\r\n      return arr;\r\n    }\r\n    return arr.filter((i) =>\r\n      i.title.toLowerCase().includes(term.toLowerCase())\r\n    );\r\n  };\r\n\r\n  setTermSeacrh = (term) => {\r\n    this.setState({ term: term });\r\n  };\r\n\r\n  filter = (flagUser, flagStatus, valueUser, valueStatus, arr) => {\r\n    if (flagStatus !== \"\" || flagUser !== \"\") {\r\n      if (flagUser === \"user\") {\r\n        arr = arr.filter((i) => i.contractor_id === +valueUser);\r\n      }\r\n      if (flagStatus === \"status\") {\r\n        arr = arr.filter((i) => i.status === +valueStatus);\r\n      }\r\n    } else {\r\n      return arr;\r\n    }\r\n\r\n    return arr;\r\n  };\r\n\r\n  setContractorFilter = (flagContractor, value) => {\r\n    if (value === \"all\") {\r\n      this.setState(() => {\r\n        return { contractorFilter: \"\", valueUser: value };\r\n      });\r\n    } else {\r\n      this.setState(() => {\r\n        return { contractorFilter: flagContractor, valueUser: value };\r\n      });\r\n    }\r\n  };\r\n\r\n  setStatusFilter = (flagStatus, value) => {\r\n    if (value === \"all\") {\r\n      this.setState(() => {\r\n        return { statusFilter: \"\", valueStatus: value };\r\n      });\r\n    } else {\r\n      this.setState(() => {\r\n        return { statusFilter: flagStatus, valueStatus: value };\r\n      });\r\n    }\r\n  };\r\n\r\n  addTask = (newItem) => {\r\n    let newTasks = _.cloneDeep(this.state.tasks);\r\n    newTasks.push(newItem);\r\n    this.setState(\r\n      () => {\r\n        return { tasks: newTasks };\r\n      },\r\n      () => {\r\n        localStorage.setItem(\"tasks\", JSON.stringify(newTasks));\r\n      }\r\n    );\r\n  };\r\n\r\n  clear() {\r\n    localStorage.clear();\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (localStorage.tasks) {\r\n      this.setState({ tasks: JSON.parse(localStorage.getItem(\"tasks\")) });\r\n    }\r\n    userapi.getUser().then((res)=>{\r\n      console.log(res.data)\r\n      this.setState(()=> { return {usersApi:res.data}})\r\n    })\r\n    console.log(this.state.usersApi)\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      term,\r\n      contractorFilter,\r\n      statusFilter,\r\n      valueUser,\r\n      valueStatus,\r\n      tasks,\r\n    } = this.state;\r\n    const visibleTasks = this.filter(\r\n      contractorFilter,\r\n      statusFilter,\r\n      valueUser,\r\n      valueStatus,\r\n      this.search(term, tasks)\r\n    );\r\n\r\n    return (\r\n      <div className=\"container-fluid\">\r\n        <table border=\"1\" className=\"main-table\">\r\n          <caption>\r\n            <AddTaskForm addTask={this.addTask} />\r\n            <button\r\n              className=\"btn btn-warning btn-sm\"\r\n              onClick={this.clear.bind(this)}\r\n            >\r\n              Сбросить localStorage\r\n            </button>\r\n          </caption>\r\n          <Header\r\n            setTermSeacrh={this.setTermSeacrh}\r\n            setContractorFilter={this.setContractorFilter}\r\n            setStatusFilter={this.setStatusFilter}\r\n            tasks={tasks}\r\n            users={this.state.users.users}\r\n            statuses={this.state.statuses.statuses}\r\n          />\r\n          <tbody>\r\n            {visibleTasks.map((item, index) => {\r\n              return (\r\n                <tr key={item.id}>\r\n                  <td>{index+1} </td>\r\n                  <td id=\"title\">{item.title}</td>\r\n                  <Users users={this.state.users} item={item.contractor_id} />\r\n                  <Status status={this.state.statuses} item={item.status} />\r\n                  <Buttons\r\n                    tasks={tasks}\r\n                    item={item}\r\n                    doClick={this.doClick.bind(this)}\r\n                  />\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}