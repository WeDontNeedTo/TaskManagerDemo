{"ast":null,"code":"var _jsxFileName = \"E:\\\\coding\\\\WEB\\\\garpix\\\\React-Django-TaskManager\\\\taskmanager\\\\TaskManagerDemo\\\\src\\\\components\\\\Buttons\\\\Buttons.js\";\n\n/* eslint-disable array-callback-return */\nimport React from \"react\";\nimport _ from \"lodash\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { did, canceled, closed } from '../../utils-redux/actions';\n\nconst Buttons = props => {\n  const mapDispatchToProps = dispatch => {\n    return bindActionCreators({\n      did,\n      canceled,\n      closed\n    }, dispatch);\n  };\n\n  const {\n    did,\n    canceled,\n    closed\n  } = props;\n\n  function handleClick(btn, action) {\n    let arr = _.cloneDeep(props.tasks);\n\n    arr.map(i => {\n      if (i.id === btn.id) {\n        return i.status = action;\n      }\n    });\n    props.doClick(arr);\n  }\n\n  if (props.item.status === 1) {\n    return /*#__PURE__*/React.createElement(\"td\", {\n      id: \"buttons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"button\",\n      id: \"btnDo\",\n      onClick: () => did(),\n      className: \"btn btn-primary btn-sm\",\n      value: \"\\u0412\\u044B\\u043F\\u043E\\u043B\\u043D\\u0438\\u0442\\u044C\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"button\",\n      id: \"btnCancel\",\n      onClick: () => canceled(),\n      className: \"btn btn-warning btn-sm\",\n      value: \"\\u041E\\u0442\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }));\n  } else if (props.item.status === 2) {\n    return /*#__PURE__*/React.createElement(\"td\", {\n      id: \"buttons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"button\",\n      id: \"btnClose\",\n      onClick: () => closed(),\n      className: \"btn btn-success btn-sm\",\n      value: \"\\u0417\\u0430\\u043A\\u0440\\u044B\\u0442\\u044C\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }));\n  } else {\n    return /*#__PURE__*/React.createElement(\"td\", {\n      id: \"buttons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 12\n      }\n    });\n  }\n};\n\nexport default connect(Buttons.mapDispatchToProps)(Buttons);","map":{"version":3,"sources":["E:/coding/WEB/garpix/React-Django-TaskManager/taskmanager/TaskManagerDemo/src/components/Buttons/Buttons.js"],"names":["React","_","connect","bindActionCreators","did","canceled","closed","Buttons","props","mapDispatchToProps","dispatch","handleClick","btn","action","arr","cloneDeep","tasks","map","i","id","status","doClick","item"],"mappings":";;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAAQC,GAAR,EAAaC,QAAb,EAAuBC,MAAvB,QAAoC,2BAApC;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAEzB,QAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACvC,WAAOP,kBAAkB,CACvB;AACEC,MAAAA,GADF;AAEEC,MAAAA,QAFF;AAGEC,MAAAA;AAHF,KADuB,EAMvBI,QANuB,CAAzB;AAQD,GATD;;AAUA,QAAM;AAACN,IAAAA,GAAD;AAAMC,IAAAA,QAAN;AAAgBC,IAAAA;AAAhB,MAAwBE,KAA9B;;AAEA,WAASG,WAAT,CAAqBC,GAArB,EAA0BC,MAA1B,EAAkC;AAChC,QAAIC,GAAG,GAAGb,CAAC,CAACc,SAAF,CAAYP,KAAK,CAACQ,KAAlB,CAAV;;AAEAF,IAAAA,GAAG,CAACG,GAAJ,CAASC,CAAD,IAAO;AACb,UAAIA,CAAC,CAACC,EAAF,KAASP,GAAG,CAACO,EAAjB,EAAqB;AACnB,eAAQD,CAAC,CAACE,MAAF,GAAWP,MAAnB;AACD;AACF,KAJD;AAKAL,IAAAA,KAAK,CAACa,OAAN,CAAcP,GAAd;AACD;;AAED,MAAIN,KAAK,CAACc,IAAN,CAAWF,MAAX,KAAsB,CAA1B,EAA6B;AAC3B,wBACE;AAAI,MAAA,EAAE,EAAC,SAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,EAAE,EAAC,OAFL;AAGE,MAAA,OAAO,EAAE,MAAIhB,GAAG,EAHlB;AAIE,MAAA,SAAS,EAAC,wBAJZ;AAKE,MAAA,KAAK,EAAC,wDALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAQE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,EAAE,EAAC,WAFL;AAGE,MAAA,OAAO,EAAE,MAAIC,QAAQ,EAHvB;AAIE,MAAA,SAAS,EAAC,wBAJZ;AAKE,MAAA,KAAK,EAAC,kDALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,CADF;AAkBD,GAnBD,MAmBO,IAAIG,KAAK,CAACc,IAAN,CAAWF,MAAX,KAAsB,CAA1B,EAA6B;AAClC,wBACE;AAAI,MAAA,EAAE,EAAC,SAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,EAAE,EAAC,UAFL;AAGE,MAAA,OAAO,EAAE,MAAId,MAAM,EAHrB;AAIE,MAAA,SAAS,EAAC,wBAJZ;AAKE,MAAA,KAAK,EAAC,4CALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAWD,GAZM,MAYA;AACL,wBAAO;AAAI,MAAA,EAAE,EAAC,SAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;AACF,CA3DD;;AA6DA,eAAeJ,OAAO,CAAEK,OAAO,CAACE,kBAAV,CAAP,CACZF,OADY,CAAf","sourcesContent":["/* eslint-disable array-callback-return */\r\nimport React from \"react\";\r\nimport _ from \"lodash\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport {did, canceled, closed} from '../../utils-redux/actions'\r\n\r\nconst Buttons = (props) => {\r\n\r\n  const mapDispatchToProps = (dispatch) => {\r\n    return bindActionCreators(\r\n      {\r\n        did,\r\n        canceled,\r\n        closed\r\n      },\r\n      dispatch\r\n    );\r\n  };\r\n  const {did, canceled, closed}=props\r\n\r\n  function handleClick(btn, action) {\r\n    let arr = _.cloneDeep(props.tasks);\r\n\r\n    arr.map((i) => {\r\n      if (i.id === btn.id) {\r\n        return (i.status = action);\r\n      }\r\n    });\r\n    props.doClick(arr);\r\n  }\r\n\r\n  if (props.item.status === 1) {\r\n    return (\r\n      <td id=\"buttons\">\r\n        <input\r\n          type=\"button\"\r\n          id=\"btnDo\"\r\n          onClick={()=>did()}\r\n          className=\"btn btn-primary btn-sm\"\r\n          value=\"Выполнить\"\r\n        />\r\n        <input\r\n          type=\"button\"\r\n          id=\"btnCancel\"\r\n          onClick={()=>canceled()}\r\n          className=\"btn btn-warning btn-sm\"\r\n          value=\"Отменить\"\r\n        />\r\n      </td>\r\n    );\r\n  } else if (props.item.status === 2) {\r\n    return (\r\n      <td id=\"buttons\">\r\n        <input\r\n          type=\"button\"\r\n          id=\"btnClose\"\r\n          onClick={()=>closed()}\r\n          className=\"btn btn-success btn-sm\"\r\n          value=\"Закрыть\"\r\n        ></input>\r\n      </td>\r\n    );\r\n  } else {\r\n    return <td id=\"buttons\"></td>;\r\n  }\r\n};\r\n\r\nexport default connect( Buttons.mapDispatchToProps)\r\n  (Buttons);\r\n"]},"metadata":{},"sourceType":"module"}